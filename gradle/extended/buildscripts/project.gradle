// # = -                         Apply Plugins                       - = #

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

// # = -                        Default Tasks                        - = #

defaultTasks 'licenseFormat', 'build'

// # = -                      Basic Project Info                     - = #

group = 'org.poweredrails'
archivesBaseName = project.name.toLowerCase()

// # = -                      Maven  Repository                      - = #

repositories {
    mavenCentral()
    maven {
        name = 'rails'
        url = 'http://repository.poweredrails.org/maven'
    }
    maven {
        name = 'sonatype-nexus'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

// # = -                  Java Compatibility Version                 - = #

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

// # = -                     Test Dependencies                       - = #

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.mockito:mockito-core:1.10.19'
}

// # = -                      Compile Encoding                       - = #

configure([compileJava, compileTestJava]) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-path']
    options.deprecation = true
    options.encoding = 'UTF-8'
}

// # = -                     Manifest Attributes                     - = #

jar {
  manifest {
    attributes(
                'Built-By': System.properties['user.name'],
                'Created-By': "${System.properties['java.vm.version']} (${System.properties['java.vm.vendor']})",
                'Implementation-Description': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': project.url
    )
  }
}

// # = -                     Java 8 Compatibility                    - = #

if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

// # = -                     Task - Set Source Jar                   - = #

task setSourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// # = -                       Task - Set Javadoc                    - = #

task setJavadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// # = -                            Artifacts                        - = #

artifacts {
    archives setSourceJar
    archives setJavadocJar
}

// # = -                       Task - Get Wrapper                    - = #

task getWrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

// # = -                       Gradle - Checkstyle                   - = #

apply from: railsapi.file('gradle/extended/buildscripts/checkstyle.gradle')